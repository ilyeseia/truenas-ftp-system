# ========================================
# .env - Configuration environnement
# ========================================

# Configuration TrueNAS
TRUENAS_ADMIN_PASSWORD=admin123
TRUENAS_ROOT_PASSWORD=root123
TRUENAS_USER=admin
TRUENAS_API_KEY=your_api_key_here

# Configuration FTP Nitroflare
FTP_HOST=ftp71.nitroflare.com
FTP_USER=dZMQBizt
FTP_PASS=b7126e26c0

# Configuration Services
SYNC_INTERVAL=1800          # 30 minutes
MONITOR_INTERVAL=300        # 5 minutes
ARCHIVE_DAYS=7              # Archiver après 7 jours

# Configuration réseau
TRUENAS_SUBNET=172.20.0.0/16
DASHBOARD_PORT=8080
TRUENAS_WEB_PORT=80

# ========================================
# download-list.txt - Liste de téléchargements
# ========================================
# Ajoutez un fichier par ligne pour téléchargement en lot
# Exemple:
# fichier1.zip
# dossier/fichier2.rar
# important/document.pdf

# ========================================
# docker-compose.override.yml - Développement
# ========================================
version: '3.8'

services:
  ftp-client:
    # Pour le développement, exposer des ports supplémentaires
    ports:
      - "2222:22"
    # Volumes de développement supplémentaires
    volumes:
      - ./dev-scripts:/dev-scripts

  # Service de développement pour tests
  dev-tools:
    image: alpine:latest
    container_name: dev-tools
    profiles:
      - dev
    volumes:
      - .:/workspace
    command: ["tail", "-f", "/dev/null"]
    networks:
      - truenas-network

# ========================================
# Makefile - Commandes utiles
# ========================================

.PHONY: help setup start stop logs status clean

help:
	@echo "=== TrueNAS + FTP Management ==="
	@echo "setup     - Configurer l'environnement"
	@echo "start     - Démarrer tous les services"
	@echo "stop      - Arrêter tous les services"
	@echo "logs      - Voir les logs"
	@echo "status    - Voir le statut"
	@echo "clean     - Nettoyer l'environnement"
	@echo "monitor   - Démarrer avec monitoring"
	@echo "dashboard - Démarrer avec dashboard"

setup:
	@echo "Configuration de l'environnement..."
	./scripts/setup-environment.sh
	chmod +x scripts/*.sh

start:
	docker-compose -f docker-compose-complete.yml up -d

stop:
	docker-compose -f docker-compose-complete.yml down

logs:
	docker-compose -f docker-compose-complete.yml logs -f

status:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/status.sh

clean:
	docker-compose -f docker-compose-complete.yml down -v
	docker system prune -f

monitor:
	docker-compose -f docker-compose-complete.yml --profile monitoring up -d

dashboard:
	docker-compose -f docker-compose-complete.yml --profile dashboard --profile monitoring up -d

# Commandes FTP
ftp-connect:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/connect-ftp.sh

ftp-list:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/list-ftp.sh

ftp-download:
	@read -p "Nom du fichier à télécharger: " file; \
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/download-to-truenas.sh "$$file"

sync:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/sync-truenas.sh

cleanup:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/cleanup-truenas.sh

backup:
	docker-compose -f docker-compose-complete.yml exec ftp-client /scripts/backup-truenas.sh
