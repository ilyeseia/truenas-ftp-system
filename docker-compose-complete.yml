version: '3.9'

# ========================================
# TrueNAS + FTP System - Refactored Professional Version 2.3
# ========================================

x-common-env: &common-env
  TZ: ${TIMEZONE:-UTC}
  LOG_LEVEL: ${LOG_LEVEL:-INFO}

services:
  # ========================================
  # PostgreSQL Database
  # ========================================
  postgres:
    image: postgres:15.6-alpine
    container_name: truenas-postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: truenas
      POSTGRES_USER: truenas
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Error - POSTGRES_PASSWORD is not set in .env}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U truenas"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - truenas-network

  # ========================================
  # Redis Cache
  # ========================================
  redis:
    image: redis:7.2.4-alpine
    container_name: truenas-redis
    hostname: redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:?Error - REDIS_PASSWORD is not set in .env}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - truenas-network

  # ========================================
  # Mock TrueNAS Service (Placeholder)
  # ========================================
  truenas:
    image: alpine:3.19
    container_name: truenas-placeholder
    hostname: truenas
    restart: unless-stopped
    command: sh -c "mkdir -p /mnt/pool && mkdir -p /data && tail -f /dev/null"
    volumes:
      - truenas-config:/data
      - truenas-pool:/mnt/pool
    networks:
      - truenas-network
    healthcheck:
      test: ["CMD-SHELL", "test -d /mnt/pool && test -d /data"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # FTP Client Service
  # ========================================
  ftp-client:
    build:
      context: .
      dockerfile: Dockerfile.ftp-client
    container_name: ftp-client
    hostname: ftp-client
    restart: unless-stopped
    depends_on:
      truenas: { condition: service_healthy }
    volumes:
      - ./scripts:/scripts:ro
      - ./logs:/logs
      - truenas-downloads:/truenas/downloads
      - truenas-uploads:/truenas/uploads
      - truenas-archive:/truenas/archive
      - truenas-temp:/truenas/temp
      - truenas-processing:/truenas/processing
    environment:
      <<: *common-env
      FTP_HOST: ${FTP_HOST:?Error - FTP_HOST is not set in .env}
      FTP_USER: ${FTP_USER:?Error - FTP_USER is not set in .env}
      FTP_PASS: ${FTP_PASS:?Error - FTP_PASS is not set in .env}
      TRUENAS_HOST: truenas
      TRUENAS_API_URL: http://truenas/api/v2.0
      TRUENAS_USER: admin
      TRUENAS_PASS: ${TRUENAS_ADMIN_PASSWORD:?Error - TRUENAS_ADMIN_PASSWORD is not set in .env}
    stdin_open: true
    tty: true
    networks:
      - truenas-network

  # ========================================
  # Sync Service
  # ========================================
  sync-service:
    build:
      context: .
      dockerfile: Dockerfile.sync-service
    container_name: sync-service
    hostname: sync-service
    restart: unless-stopped
    depends_on:
      ftp-client: { condition: service_started }
    volumes:
      - ./scripts:/scripts:ro
      - ./logs:/logs
      - truenas-downloads:/truenas/downloads
      - truenas-uploads:/truenas/uploads
      - truenas-archive:/truenas/archive
      - truenas-temp:/truenas/temp
      - truenas-processing:/truenas/processing
    environment:
      <<: *common-env
      SYNC_INTERVAL: ${SYNC_INTERVAL:-1800}
      ARCHIVE_DAYS: ${ARCHIVE_DAYS:-7}
      CLEANUP_DAYS: ${CLEANUP_DAYS:-30}
    networks:
      - truenas-network

  # ========================================
  # Monitoring: Prometheus
  # ========================================
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    hostname: prometheus
    profiles: ["monitoring"]
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./config/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - truenas-network

  # ========================================
  # Monitoring: Grafana
  # ========================================
  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    hostname: grafana
    profiles: ["monitoring"]
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:?Error - GRAFANA_PASSWORD is not set in .env}
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    networks:
      - truenas-network

  # ========================================
  # Dashboard
  # ========================================
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: dashboard
    hostname: dashboard
    profiles: ["dashboard"]
    restart: unless-stopped
    ports:
      - "${DASHBOARD_PORT:-8080}:80"
    volumes:
      - ./dashboard:/usr/share/nginx/html:ro
      - ./config/nginx/sites/dashboard.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - truenas-network

# ========================================
# Network Configuration
# ========================================
networks:
  truenas-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${TRUENAS_SUBNET:-172.20.0.0/16}

# ========================================
# Volume Configuration (Docker-Managed)
# ========================================
volumes:
  postgres-data: {}
  redis-data: {}
  truenas-config: {}
  truenas-pool: {}
  truenas-downloads: {}
  truenas-uploads: {}
  truenas-archive: {}
  truenas-temp: {}
  truenas-processing: {}
  prometheus-data: {}
  grafana-data: {}
  loki-data: {}
